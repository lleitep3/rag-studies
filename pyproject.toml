[tool.poetry]
name = "rag-study"
version = "0.1.0"
description = "Sistema RAG (Retrieval-Augmented Generation) para análise e revisão de código"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
python = "^3.10"

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers --disable-warnings"
markers = [
    "unit: marca testes unitários",
    "integration: marca testes de integração",
    "requires_ollama: marca testes que requerem Ollama",
    "requires_chroma: marca testes que requerem ChromaDB",
    "slow: marca testes lentos"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/test_*.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod"
]
precision = 2
show_missing = true
skip_covered = false

[tool.bandit]
targets = ["src"]
exclude_dirs = ["tests", "scripts"]
skips = ["B101", "B601"]  # B101: assert_used, B601: paramiko_calls
severity = "low"
confidence = "low"

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tests/fixtures
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"